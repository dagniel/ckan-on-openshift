apiVersion: v1
kind: ConfigMap
metadata:
  name: datapusher-dev
  annotations:
      description: |-
        Holds the configuration files for starting datapusher and the startup script
  labels:
    app.component: datapusher
data:
  app.sh: |-
    #
    # Wrapper script used to start datapusher in development mode as described
    # in the doc section: https://github.com/ckan/datapusher#development-installation
    #

    #!/bin/bash

    export PYTHONPATH=$HOME

    # most likely there is a custom datapusher_settings.py file injcted via ConfigMap; if not use default
    DATAPUSHER_SETTINGS_FILE="$HOME/deployment/datapusher_settings.py"
    if [[ -f "/opt/config/datapusher_settings.py" ]]; then
      echo "---> Starting Datapusher with settings from /opt/config/datapusher_settings.py..."
      DATAPUSHER_SETTINGS_FILE="/opt/config/datapusher_settings.py"
    else
      echo "---> Starting Datapusher with default settings ..."
    fi
    python $HOME/datapusher/main.py $DATAPUSHER_SETTINGS_FILE

  datapusher_settings.py: |-
    import os
    import uuid

    DEBUG = False
    TESTING = False
    SECRET_KEY = str(uuid.uuid4())
    USERNAME = str(uuid.uuid4())
    PASSWORD = str(uuid.uuid4())

    NAME = 'datapusher'

    # Webserver host and port

    HOST = os.environ.get('DATAPUSHER_HOST', '0.0.0.0')
    PORT = os.environ.get('DATAPUSHER_PORT', 8800)

    # Database

    SQLALCHEMY_DATABASE_URI = os.environ.get('DATAPUSHER_SQLALCHEMY_DATABASE_URI', 'sqlite:////tmp/job_store.db')

    # Download and streaming settings

    MAX_CONTENT_LENGTH = int(os.environ.get('DATAPUSHER_MAX_CONTENT_LENGTH', '1024000'))
    CHUNK_SIZE = int(os.environ.get('DATAPUSHER_CHUNK_SIZE', '16384'))
    CHUNK_INSERT_ROWS = int(os.environ.get('DATAPUSHER_CHUNK_INSERT_ROWS', '250'))
    DOWNLOAD_TIMEOUT = int(os.environ.get('DATAPUSHER_DOWNLOAD_TIMEOUT', '30'))

    # Verify SSL
    SSL_VERIFY = os.environ.get('DATAPUSHER_SSL_VERIFY', True)

    # logging
    #LOG_FILE = '/tmp/ckan_service.log'
    STDERR = True