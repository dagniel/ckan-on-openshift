apiVersion: v1
kind: Template
metadata:
  name: ckan-ext-pip
  annotations:
    description: |-
      Template for deploying CKAN extensions via pip install from PyPi/Docker build
    iconClass: icon-python
    openshift.io/display-name: Ckan extensions with pip
    tags: ckan,python,ckan-ext
    template.openshift.io/long-description: >-
      Template for deploying CKAN extensions via pip install from PyPi/Docker build
parameters:
  - name: NAME
    displayName: Application name
    description: The name assigned to all of the frontend objects defined in this template.
    value: ckan
    required: true
  - name: NAMESPACE
    displayName: Namespace
    description: The OpenShift Namespace where the resources will be created.
    value: ckan
    required: true
  - name: OUTPUT_IMG
    displayName: ImageStream name and tag for the output image
    value: ckan
    required: true
  - name: BASEBUILDER_IMG
    displayName: Base builder's source image
    description: |-
      Base builder's source image name used to create the app's specific builder
      Must be in the form image:tag
    value: "quay.io/dagniel/ckan-on-openshift:2.8.2"
    required: true
  - name: BASEBUILDER_REPO_URL
    displayName: Base builder repository URL
    description: The URL of the repository with builder scripts specific for the app
    value: https://github.com/dagniel/ckan-on-openshift
    required: true
  - name: BASEBUILDER_REPO_AUTH
    displayName: Base builder Secret for repository authentication
    description: The referenced OKD secret used to authenticaate to the specified repository
    value:
  - name: BASEBUILDER_REPO_REF
    displayName: Base builder repository Reference
    description: >-
      Set this to a branch name, tag or other ref of your repository if you are
      not using the default branch.
    value: ""
  - name: BASEBUILDER_REPO_CONTEXT_DIR
    displayName: Base builder repository's Context Directory
    description: >-
      Set this to the relative path to your project if it is not in the root of
      your repository.
    value: "docker/ckan-extensions/pip"
  - name: BASEBUILDER_REPO_DOCKERFILE
    displayName: Base builder repository's Dockerfile
    description: >-
      Set this to the path of the Dockerfile, relative to the context directory, used to build the extension(s)
    value: "Dockerfile"
  - name: CKAN_EXT_LIST
    displayName: Env var with list of pip  packages to install
    required: true
    value: "ckanext-geoview ckanext-deadoralive ckanext-eurovoc"
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Docker build to add specified extensions to a CKAN image
    labels:
      app: ${NAME}
      ckan.component: ckan-ext
    name: ${NAME}-ext-pip
    namespace: ${NAMESPACE}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${OUTPUT_IMG}
        namespace: ${NAMESPACE}
    runPolicy: Serial
    source:
      type: Git
      git:
        ref: ${BASEBUILDER_REPO_REF}
        uri: ${BASEBUILDER_REPO_URL}
      contextDir: ${BASEBUILDER_REPO_CONTEXT_DIR}
# authentication against a private repository
#      sourceSecret:
#        name: ${BASEBUILDER_REPO_AUTH}
    strategy:
      type: Docker
      dockerStrategy:
        dockerfilePath: "${BASEBUILDER_REPO_DOCKERFILE}"
        env:
          - name: CKAN_EXT_LIST
            value: ${CKAN_EXT_LIST}
        from:
          kind: DockerImage
          name: ${BASEBUILDER_IMG}
## use this when referencing a local ImageStream
#          kind: ImageStreamTag
#          name: ${BASEBUILDER_IMG}
#          namespace: ${NAMESPACE}
    successfulBuildsHistoryLimit: 2
    failedBuildsHistoryLimit: 5
    triggers:
#not linking the generic builder to the app's builder
    - type: ConfigChange

